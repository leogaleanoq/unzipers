# Define the path to the .gz file and the destination directory
$gzFilePath = "C:\Temp\Schoeller\TESTFILE.dat.gz"
$destinationDirectory = "C:\Temp\Schoeller\files"

# Function to extract a .gz file
function Extract-GzipFile {
    param (
        [string]$gzFilePath,
        [string]$destinationDirectory
    )

    # Ensure the .gz file exists
    if (-Not (Test-Path $gzFilePath)) {
        Write-Host "The specified .gz file does not exist: $gzFilePath"
        return
    }

    # Create the destination directory if it does not exist
    if (-Not (Test-Path $destinationDirectory)) {
        New-Item -ItemType Directory -Path $destinationDirectory | Out-Null
    }

    # Path for the decompressed file
    $decompressedFilePath = [System.IO.Path]::Combine($destinationDirectory, [System.IO.Path]::GetFileNameWithoutExtension($gzFilePath))

    try {
        # Decompress the .gz file
        Write-Host "Decompressing $gzFilePath to $decompressedFilePath..."
        $fileStream = [System.IO.File]::OpenRead($gzFilePath)
        $gzipStream = New-Object System.IO.Compression.GZipStream($fileStream, [System.IO.Compression.CompressionMode]::Decompress)
        $decompressedFileStream = [System.IO.File]::Create($decompressedFilePath)

        $buffer = New-Object byte[] 4096
        $bytesRead = 0

        while (($bytesRead = $gzipStream.Read($buffer, 0, $buffer.Length)) -gt 0) {
            $decompressedFileStream.Write($buffer, 0, $bytesRead)
        }

        $gzipStream.Close()
        $fileStream.Close()
        $decompressedFileStream.Close()

        Write-Host "File decompressed successfully to $decompressedFilePath"
    }
    catch {
        Write-Host "An error occurred: $_"
    }
}

# Call the function to extract the .gz file
Extract-GzipFile -gzFilePath $gzFilePath -destinationDirectory $destinationDirectory
